service: choreapp-client
frameworkVersion: ">=1.21.0 <2.0.0"
conditions:
  createProd:
    Fn::Equals:
      - ${opt:stage}
      - prod
provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
plugins:
  - serverless-s3-sync
custom:
  domain:
    dev: "chores-dev.zclabs.io"
    prod: "chores.zclabs.io"
  hostedZoneName: ${self:custom.domain.${self:provider.stage}}
  aliasHostedZoneId: Z3AQBSTGFYJSTF # us-east-1
  aliasDNSName: s3-website-us-east-1.amazonaws.com
  s3Sync:
    - bucketName: ${self:custom.hostedZoneName}
      localDir: build
      params:
        - index.html:
            CacheControl: "no-cache"
        - "*.js":
            CacheControl: "public, max-age=2592000" # 30 days
resources:
  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.domain.${self:provider.stage}}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
    StaticSiteCDN:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Comment: CDN for ${self:custom.domain.${self:provider.stage}}
          Aliases:
            - !Join [
                "",
                [
                  !Ref "AWS::StackName",
                  !Ref "AWS::AccountId",
                  .,
                  !Ref "AWS::Region",
                  .,
                  "${self:custom.domain.${self:provider.stage}}",
                ],
              ]
          Enabled: "true"
          DefaultCacheBehavior:
            ForwardedValues:
              QueryString: "true"
            TargetOriginId: only-origin
            ViewerProtocolPolicy: allow-all
          DefaultRootObject: index.html
          ViewerCertificate:
            SslSupportMethod: sni-only
            AcmCertificateArn: # probably just be easier to create the ACM cert here?
          Origins:
            - CustomOriginConfig:
                HTTPPort: "80"
                HTTPSPort: "443"
                OriginProtocolPolicy: http-only
              DomainName:
                !Join ["", [!Ref "StaticSite", "${self:custom.aliasDNSName}"]]
              Id: only-origin
    DnsRecord:
      Type: "AWS::Route53::RecordSet"
      Properties:
        HostedZoneName: ${self:custom.domain.${self:provider.stage}}.
        Name:
          !Join [
            "",
            [
              !Ref "AWS::StackName",
              !Ref "AWS::AccountId",
              .,
              !Ref "AWS::Region",
              .,
              "${self:custom.domain.${self:provider.stage}}",
            ],
          ]
        Type: CNAME
        TTL: "900"
        ResourceRecords:
          - !GetAtt [StaticSiteCDN, DomainName]
